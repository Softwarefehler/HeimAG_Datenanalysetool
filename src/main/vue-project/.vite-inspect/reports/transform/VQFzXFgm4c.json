{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/components/VAppBar/VAppBar.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VAppBar.css\";\n\n// Components\nimport { makeVToolbarProps, VToolbar } from \"../VToolbar/VToolbar.mjs\"; // Composables\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeScrollProps, useScroll } from \"../../composables/scroll.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\";\nimport { useToggleScope } from \"../../composables/toggleScope.mjs\"; // Utilities\nimport { computed, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVAppBarProps = propsFactory({\n  scrollBehavior: String,\n  modelValue: {\n    type: Boolean,\n    default: true\n  },\n  location: {\n    type: String,\n    default: 'top',\n    validator: value => ['top', 'bottom'].includes(value)\n  },\n  ...makeVToolbarProps(),\n  ...makeLayoutItemProps(),\n  ...makeScrollProps(),\n  height: {\n    type: [Number, String],\n    default: 64\n  }\n}, 'VAppBar');\nexport const VAppBar = genericComponent()({\n  name: 'VAppBar',\n  props: makeVAppBarProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const vToolbarRef = ref();\n    const isActive = useProxiedModel(props, 'modelValue');\n    const scrollBehavior = computed(() => {\n      const behavior = new Set(props.scrollBehavior?.split(' ') ?? []);\n      return {\n        hide: behavior.has('hide'),\n        fullyHide: behavior.has('fully-hide'),\n        inverted: behavior.has('inverted'),\n        collapse: behavior.has('collapse'),\n        elevate: behavior.has('elevate'),\n        fadeImage: behavior.has('fade-image')\n        // shrink: behavior.has('shrink'),\n      };\n    });\n    const canScroll = computed(() => {\n      const behavior = scrollBehavior.value;\n      return behavior.hide || behavior.fullyHide || behavior.inverted || behavior.collapse || behavior.elevate || behavior.fadeImage ||\n      // behavior.shrink ||\n      !isActive.value;\n    });\n    const {\n      currentScroll,\n      scrollThreshold,\n      isScrollingUp,\n      scrollRatio\n    } = useScroll(props, {\n      canScroll\n    });\n    const canHide = computed(() => scrollBehavior.value.hide || scrollBehavior.value.fullyHide);\n    const isCollapsed = computed(() => props.collapse || scrollBehavior.value.collapse && (scrollBehavior.value.inverted ? scrollRatio.value > 0 : scrollRatio.value === 0));\n    const isFlat = computed(() => props.flat || scrollBehavior.value.fullyHide && !isActive.value || scrollBehavior.value.elevate && (scrollBehavior.value.inverted ? currentScroll.value > 0 : currentScroll.value === 0));\n    const opacity = computed(() => scrollBehavior.value.fadeImage ? scrollBehavior.value.inverted ? 1 - scrollRatio.value : scrollRatio.value : undefined);\n    const height = computed(() => {\n      const height = Number(vToolbarRef.value?.contentHeight ?? props.height);\n      const extensionHeight = Number(vToolbarRef.value?.extensionHeight ?? 0);\n      if (!canHide.value) return height + extensionHeight;\n      return currentScroll.value < scrollThreshold.value || scrollBehavior.value.fullyHide ? height + extensionHeight : height;\n    });\n    useToggleScope(computed(() => !!props.scrollBehavior), () => {\n      watchEffect(() => {\n        if (canHide.value) {\n          if (scrollBehavior.value.inverted) {\n            isActive.value = currentScroll.value > scrollThreshold.value;\n          } else {\n            isActive.value = isScrollingUp.value || currentScroll.value < scrollThreshold.value;\n          }\n        } else {\n          isActive.value = true;\n        }\n      });\n    });\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const {\n      layoutItemStyles,\n      layoutIsReady\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(props, 'location'),\n      layoutSize: height,\n      elementSize: shallowRef(undefined),\n      active: isActive,\n      absolute: toRef(props, 'absolute')\n    });\n    useRender(() => {\n      const toolbarProps = VToolbar.filterProps(props);\n      return _createVNode(VToolbar, _mergeProps({\n        \"ref\": vToolbarRef,\n        \"class\": ['v-app-bar', {\n          'v-app-bar--bottom': props.location === 'bottom'\n        }, props.class],\n        \"style\": [{\n          ...layoutItemStyles.value,\n          '--v-toolbar-image-opacity': opacity.value,\n          height: undefined,\n          ...ssrBootStyles.value\n        }, props.style]\n      }, toolbarProps, {\n        \"collapse\": isCollapsed.value,\n        \"flat\": isFlat.value\n      }), slots);\n    });\n    return layoutIsReady;\n  }\n});\n//# sourceMappingURL=VAppBar.mjs.map",
      "start": 1724686263748,
      "end": 1724686263926,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1724686263926,
      "end": 1724686263926,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1724686263926,
      "end": 1724686263926,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1724686263926,
      "end": 1724686263926,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1724686263926,
      "end": 1724686263926,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1724686263926,
      "end": 1724686263926,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1724686263926,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1724686263927,
      "end": 1724686263927,
      "order": "normal"
    }
  ]
}
