{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/components/VVirtualScroll/VVirtualScrollItem.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\"; // Utilities\nimport { watch } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n  ...makeComponentProps()\n}, 'VVirtualScrollItem');\nexport const VVirtualScrollItem = genericComponent()({\n  name: 'VVirtualScrollItem',\n  inheritAttrs: false,\n  props: makeVVirtualScrollItemProps(),\n  emits: {\n    'update:height': height => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      resizeRef,\n      contentRect\n    } = useResizeObserver(undefined, 'border');\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height);\n    });\n    useRender(() => props.renderless ? _createVNode(_Fragment, null, [slots.default?.({\n      itemRef: resizeRef\n    })]) : _createVNode(\"div\", _mergeProps({\n      \"ref\": resizeRef,\n      \"class\": ['v-virtual-scroll__item', props.class],\n      \"style\": props.style\n    }, attrs), [slots.default?.()]));\n  }\n});\n//# sourceMappingURL=VVirtualScrollItem.mjs.map",
      "start": 1724415000439,
      "end": 1724415000492,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1724415000492,
      "end": 1724415000492,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1724415000492,
      "end": 1724415000492,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1724415000492,
      "end": 1724415000492,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1724415000492,
      "end": 1724415000492,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1724415000492,
      "end": 1724415000492,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1724415000492,
      "end": 1724415000492,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1724415000493,
      "end": 1724415000493,
      "order": "normal"
    }
  ]
}
