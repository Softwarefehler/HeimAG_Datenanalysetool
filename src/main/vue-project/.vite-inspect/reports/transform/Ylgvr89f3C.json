{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/components/VDataTable/composables/options.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Utilities\nimport { computed, watch } from 'vue';\nimport { deepEqual, getCurrentInstance } from \"../../../util/index.mjs\"; // Types\nexport function useOptions(_ref) {\n  let {\n    page,\n    itemsPerPage,\n    sortBy,\n    groupBy,\n    search\n  } = _ref;\n  const vm = getCurrentInstance('VDataTable');\n  const options = computed(() => ({\n    page: page.value,\n    itemsPerPage: itemsPerPage.value,\n    sortBy: sortBy.value,\n    groupBy: groupBy.value,\n    search: search.value\n  }));\n  let oldOptions = null;\n  watch(options, () => {\n    if (deepEqual(oldOptions, options.value)) return;\n\n    // Reset page when searching\n    if (oldOptions && oldOptions.search !== options.value.search) {\n      page.value = 1;\n    }\n    vm.emit('update:options', options.value);\n    oldOptions = options.value;\n  }, {\n    deep: true,\n    immediate: true\n  });\n}\n//# sourceMappingURL=options.mjs.map",
      "start": 1724142508335,
      "end": 1724142508350,
      "sourcemaps": null
    }
  ]
}
