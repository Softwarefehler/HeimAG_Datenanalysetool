{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/util/propsFactory.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Types\n// eslint-disable-line vue/prefer-import-from-vue\n\n/**\n * Creates a factory function for props definitions.\n * This is used to define props in a composable then override\n * default values in an implementing component.\n *\n * @example Simplified signature\n * (props: Props) => (defaults?: Record<keyof props, any>) => Props\n *\n * @example Usage\n * const makeProps = propsFactory({\n *   foo: String,\n * })\n *\n * defineComponent({\n *   props: {\n *     ...makeProps({\n *       foo: 'a',\n *     }),\n *   },\n *   setup (props) {\n *     // would be \"string | undefined\", now \"string\" because a default has been provided\n *     props.foo\n *   },\n * }\n */\n\nexport function propsFactory(props, source) {\n  return defaults => {\n    return Object.keys(props).reduce((obj, prop) => {\n      const isObjectDefinition = typeof props[prop] === 'object' && props[prop] != null && !Array.isArray(props[prop]);\n      const definition = isObjectDefinition ? props[prop] : {\n        type: props[prop]\n      };\n      if (defaults && prop in defaults) {\n        obj[prop] = {\n          ...definition,\n          default: defaults[prop]\n        };\n      } else {\n        obj[prop] = definition;\n      }\n      if (source && !obj[prop].source) {\n        obj[prop].source = source;\n      }\n      return obj;\n    }, {});\n  };\n}\n\n/**\n * Like `Partial<T>` but doesn't care what the value is\n */\n\n// Copied from Vue\n//# sourceMappingURL=propsFactory.mjs.map",
      "start": 1722976698130,
      "end": 1722976698300,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1722976698300,
      "end": 1722976698300,
      "order": "normal"
    }
  ]
}
