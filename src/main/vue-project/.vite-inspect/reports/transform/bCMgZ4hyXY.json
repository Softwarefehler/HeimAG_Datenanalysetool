{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/components/VStepper/VStepper.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VStepper.css\";\n\n// Components\nimport { VStepperSymbol } from \"./shared.mjs\";\nimport { makeVStepperActionsProps, VStepperActions } from \"./VStepperActions.mjs\";\nimport { VStepperHeader } from \"./VStepperHeader.mjs\";\nimport { VStepperItem } from \"./VStepperItem.mjs\";\nimport { VStepperWindow } from \"./VStepperWindow.mjs\";\nimport { VStepperWindowItem } from \"./VStepperWindowItem.mjs\";\nimport { VDivider } from \"../VDivider/index.mjs\";\nimport { makeVSheetProps, VSheet } from \"../VSheet/VSheet.mjs\"; // Composables\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeDisplayProps, useDisplay } from \"../../composables/display.mjs\";\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\"; // Utilities\nimport { computed, toRefs } from 'vue';\nimport { genericComponent, getPropertyFromItem, only, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeStepperProps = propsFactory({\n  altLabels: Boolean,\n  bgColor: String,\n  completeIcon: String,\n  editIcon: String,\n  editable: Boolean,\n  errorIcon: String,\n  hideActions: Boolean,\n  items: {\n    type: Array,\n    default: () => []\n  },\n  itemTitle: {\n    type: String,\n    default: 'title'\n  },\n  itemValue: {\n    type: String,\n    default: 'value'\n  },\n  nonLinear: Boolean,\n  flat: Boolean,\n  ...makeDisplayProps()\n}, 'Stepper');\nexport const makeVStepperProps = propsFactory({\n  ...makeStepperProps(),\n  ...makeGroupProps({\n    mandatory: 'force',\n    selectedClass: 'v-stepper-item--selected'\n  }),\n  ...makeVSheetProps(),\n  ...only(makeVStepperActionsProps(), ['prevText', 'nextText'])\n}, 'VStepper');\nexport const VStepper = genericComponent()({\n  name: 'VStepper',\n  props: makeVStepperProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      items: _items,\n      next,\n      prev,\n      selected\n    } = useGroup(props, VStepperSymbol);\n    const {\n      displayClasses,\n      mobile\n    } = useDisplay(props);\n    const {\n      completeIcon,\n      editIcon,\n      errorIcon,\n      color,\n      editable,\n      prevText,\n      nextText\n    } = toRefs(props);\n    const items = computed(() => props.items.map((item, index) => {\n      const title = getPropertyFromItem(item, props.itemTitle, item);\n      const value = getPropertyFromItem(item, props.itemValue, index + 1);\n      return {\n        title,\n        value,\n        raw: item\n      };\n    }));\n    const activeIndex = computed(() => {\n      return _items.value.findIndex(item => selected.value.includes(item.id));\n    });\n    const disabled = computed(() => {\n      if (props.disabled) return props.disabled;\n      if (activeIndex.value === 0) return 'prev';\n      if (activeIndex.value === _items.value.length - 1) return 'next';\n      return false;\n    });\n    provideDefaults({\n      VStepperItem: {\n        editable,\n        errorIcon,\n        completeIcon,\n        editIcon,\n        prevText,\n        nextText\n      },\n      VStepperActions: {\n        color,\n        disabled,\n        prevText,\n        nextText\n      }\n    });\n    useRender(() => {\n      const sheetProps = VSheet.filterProps(props);\n      const hasHeader = !!(slots.header || props.items.length);\n      const hasWindow = props.items.length > 0;\n      const hasActions = !props.hideActions && !!(hasWindow || slots.actions);\n      return _createVNode(VSheet, _mergeProps(sheetProps, {\n        \"color\": props.bgColor,\n        \"class\": ['v-stepper', {\n          'v-stepper--alt-labels': props.altLabels,\n          'v-stepper--flat': props.flat,\n          'v-stepper--non-linear': props.nonLinear,\n          'v-stepper--mobile': mobile.value\n        }, displayClasses.value, props.class],\n        \"style\": props.style\n      }), {\n        default: () => [hasHeader && _createVNode(VStepperHeader, {\n          \"key\": \"stepper-header\"\n        }, {\n          default: () => [items.value.map((_ref2, index) => {\n            let {\n              raw,\n              ...item\n            } = _ref2;\n            return _createVNode(_Fragment, null, [!!index && _createVNode(VDivider, null, null), _createVNode(VStepperItem, item, {\n              default: slots[`header-item.${item.value}`] ?? slots.header,\n              icon: slots.icon,\n              title: slots.title,\n              subtitle: slots.subtitle\n            })]);\n          })]\n        }), hasWindow && _createVNode(VStepperWindow, {\n          \"key\": \"stepper-window\"\n        }, {\n          default: () => [items.value.map(item => _createVNode(VStepperWindowItem, {\n            \"value\": item.value\n          }, {\n            default: () => slots[`item.${item.value}`]?.(item) ?? slots.item?.(item)\n          }))]\n        }), slots.default?.({\n          prev,\n          next\n        }), hasActions && (slots.actions?.({\n          next,\n          prev\n        }) ?? _createVNode(VStepperActions, {\n          \"key\": \"stepper-actions\",\n          \"onClick:prev\": prev,\n          \"onClick:next\": next\n        }, slots))]\n      });\n    });\n    return {\n      prev,\n      next\n    };\n  }\n});\n//# sourceMappingURL=VStepper.mjs.map",
      "start": 1722635714152,
      "end": 1722635714193,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1722635714193,
      "end": 1722635714193,
      "order": "normal"
    }
  ]
}
