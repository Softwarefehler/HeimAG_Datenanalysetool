{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/components/VStepper/VStepperItem.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VStepperItem.css\";\n\n// Components\nimport { VAvatar } from \"../VAvatar/VAvatar.mjs\";\nimport { VIcon } from \"../VIcon/VIcon.mjs\"; // Composables\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { genOverlays } from \"../../composables/variant.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { VStepperSymbol } from \"./shared.mjs\";\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeStepperItemProps = propsFactory({\n  color: String,\n  title: String,\n  subtitle: String,\n  complete: Boolean,\n  completeIcon: {\n    type: String,\n    default: '$complete'\n  },\n  editable: Boolean,\n  editIcon: {\n    type: String,\n    default: '$edit'\n  },\n  error: Boolean,\n  errorIcon: {\n    type: String,\n    default: '$error'\n  },\n  icon: String,\n  ripple: {\n    type: [Boolean, Object],\n    default: true\n  },\n  rules: {\n    type: Array,\n    default: () => []\n  }\n}, 'StepperItem');\nexport const makeVStepperItemProps = propsFactory({\n  ...makeStepperItemProps(),\n  ...makeGroupItemProps()\n}, 'VStepperItem');\nexport const VStepperItem = genericComponent()({\n  name: 'VStepperItem',\n  directives: {\n    Ripple\n  },\n  props: makeVStepperItemProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const group = useGroupItem(props, VStepperSymbol, true);\n    const step = computed(() => group?.value.value ?? props.value);\n    const isValid = computed(() => props.rules.every(handler => handler() === true));\n    const isClickable = computed(() => !props.disabled && props.editable);\n    const canEdit = computed(() => !props.disabled && props.editable);\n    const hasError = computed(() => props.error || !isValid.value);\n    const hasCompleted = computed(() => props.complete || props.rules.length > 0 && isValid.value);\n    const icon = computed(() => {\n      if (hasError.value) return props.errorIcon;\n      if (hasCompleted.value) return props.completeIcon;\n      if (group.isSelected.value && props.editable) return props.editIcon;\n      return props.icon;\n    });\n    const slotProps = computed(() => ({\n      canEdit: canEdit.value,\n      hasError: hasError.value,\n      hasCompleted: hasCompleted.value,\n      title: props.title,\n      subtitle: props.subtitle,\n      step: step.value,\n      value: props.value\n    }));\n    useRender(() => {\n      const hasColor = (!group || group.isSelected.value || hasCompleted.value || canEdit.value) && !hasError.value && !props.disabled;\n      const hasTitle = !!(props.title != null || slots.title);\n      const hasSubtitle = !!(props.subtitle != null || slots.subtitle);\n      function onClick() {\n        group?.toggle();\n      }\n      return _withDirectives(_createVNode(\"button\", {\n        \"class\": ['v-stepper-item', {\n          'v-stepper-item--complete': hasCompleted.value,\n          'v-stepper-item--disabled': props.disabled,\n          'v-stepper-item--error': hasError.value\n        }, group?.selectedClass.value],\n        \"disabled\": !props.editable,\n        \"onClick\": onClick\n      }, [isClickable.value && genOverlays(true, 'v-stepper-item'), _createVNode(VAvatar, {\n        \"key\": \"stepper-avatar\",\n        \"class\": \"v-stepper-item__avatar\",\n        \"color\": hasColor ? props.color : undefined,\n        \"size\": 24\n      }, {\n        default: () => [slots.icon?.(slotProps.value) ?? (icon.value ? _createVNode(VIcon, {\n          \"icon\": icon.value\n        }, null) : step.value)]\n      }), _createVNode(\"div\", {\n        \"class\": \"v-stepper-item__content\"\n      }, [hasTitle && _createVNode(\"div\", {\n        \"key\": \"title\",\n        \"class\": \"v-stepper-item__title\"\n      }, [slots.title?.(slotProps.value) ?? props.title]), hasSubtitle && _createVNode(\"div\", {\n        \"key\": \"subtitle\",\n        \"class\": \"v-stepper-item__subtitle\"\n      }, [slots.subtitle?.(slotProps.value) ?? props.subtitle]), slots.default?.(slotProps.value)])]), [[_resolveDirective(\"ripple\"), props.ripple && props.editable, null]]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VStepperItem.mjs.map",
      "start": 1724750474138,
      "end": 1724750474205,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1724750474205,
      "end": 1724750474205,
      "order": "normal"
    }
  ]
}
