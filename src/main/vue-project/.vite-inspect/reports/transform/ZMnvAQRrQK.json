{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/components/VLayout/VLayoutItem.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VLayoutItem.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVLayoutItemProps = propsFactory({\n  position: {\n    type: String,\n    required: true\n  },\n  size: {\n    type: [Number, String],\n    default: 300\n  },\n  modelValue: Boolean,\n  ...makeComponentProps(),\n  ...makeLayoutItemProps()\n}, 'VLayoutItem');\nexport const VLayoutItem = genericComponent()({\n  name: 'VLayoutItem',\n  props: makeVLayoutItemProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      layoutItemStyles,\n      layoutIsReady\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(props, 'position'),\n      elementSize: toRef(props, 'size'),\n      layoutSize: toRef(props, 'size'),\n      active: toRef(props, 'modelValue'),\n      absolute: toRef(props, 'absolute')\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-layout-item', props.class],\n      \"style\": [layoutItemStyles.value, props.style]\n    }, [slots.default?.()]));\n    return layoutIsReady;\n  }\n});\n//# sourceMappingURL=VLayoutItem.mjs.map",
      "start": 1722879215386,
      "end": 1722879215388,
      "sourcemaps": null
    }
  ]
}
