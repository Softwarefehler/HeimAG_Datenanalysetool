{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/components/VSparkline/util/path.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// @ts-nocheck\n/* eslint-disable */\n\n// import { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath(points, radius) {\n  let fill = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 75;\n  if (points.length === 0) return '';\n  const start = points.shift();\n  const end = points[points.length - 1];\n  return (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) + points.map((point, index) => {\n    const next = points[index + 1];\n    const prev = points[index - 1] || start;\n    const isCollinear = next && checkCollinear(next, point, prev);\n    if (!next || isCollinear) {\n      return `L${point.x} ${point.y}`;\n    }\n    const threshold = Math.min(getDistance(prev, point), getDistance(next, point));\n    const isTooCloseForRadius = threshold / 2 < radius;\n    const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius;\n    const before = moveTo(prev, point, radiusForPoint);\n    const after = moveTo(next, point, radiusForPoint);\n    return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`;\n  }).join('') + (fill ? `L${end.x} ${height - start.x + 2} Z` : '');\n}\nfunction int(value) {\n  return parseInt(value, 10);\n}\n\n/**\n * https://en.wikipedia.org/wiki/Collinearity\n * x=(x1+x2)/2\n * y=(y1+y2)/2\n */\nexport function checkCollinear(p0, p1, p2) {\n  return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y);\n}\nexport function getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\nexport function moveTo(to, from, radius) {\n  const vector = {\n    x: to.x - from.x,\n    y: to.y - from.y\n  };\n  const length = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n  const unitVector = {\n    x: vector.x / length,\n    y: vector.y / length\n  };\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius\n  };\n}\n//# sourceMappingURL=path.mjs.map",
      "start": 1724767983386,
      "end": 1724767983410,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1724767983410,
      "end": 1724767983410,
      "order": "normal"
    }
  ]
}
