{
  "resolvedId": "C:/Users/MAG/IdeaProjects/Datenanalysetool/src/main/vue-project/node_modules/vuetify/lib/components/VWindow/VWindowItem.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { withDirectives as _withDirectives, createVNode as _createVNode, vShow as _vShow } from \"vue\";\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\";\nimport { MaybeTransition } from \"../../composables/transition.mjs\"; // Directives\nimport Touch from \"../../directives/touch/index.mjs\"; // Utilities\nimport { computed, inject, nextTick, shallowRef } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nimport { VWindowGroupSymbol, VWindowSymbol } from \"./VWindow.mjs\";\nexport const makeVWindowItemProps = propsFactory({\n  reverseTransition: {\n    type: [Boolean, String],\n    default: undefined\n  },\n  transition: {\n    type: [Boolean, String],\n    default: undefined\n  },\n  ...makeComponentProps(),\n  ...makeGroupItemProps(),\n  ...makeLazyProps()\n}, 'VWindowItem');\nexport const VWindowItem = genericComponent()({\n  name: 'VWindowItem',\n  directives: {\n    Touch\n  },\n  props: makeVWindowItemProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const window = inject(VWindowSymbol);\n    const groupItem = useGroupItem(props, VWindowGroupSymbol);\n    const {\n      isBooted\n    } = useSsrBoot();\n    if (!window || !groupItem) throw new Error('[Vuetify] VWindowItem must be used inside VWindow');\n    const isTransitioning = shallowRef(false);\n    const hasTransition = computed(() => isBooted.value && (window.isReversed.value ? props.reverseTransition !== false : props.transition !== false));\n    function onAfterTransition() {\n      if (!isTransitioning.value || !window) {\n        return;\n      }\n\n      // Finalize transition state.\n      isTransitioning.value = false;\n      if (window.transitionCount.value > 0) {\n        window.transitionCount.value -= 1;\n\n        // Remove container height if we are out of transition.\n        if (window.transitionCount.value === 0) {\n          window.transitionHeight.value = undefined;\n        }\n      }\n    }\n    function onBeforeTransition() {\n      if (isTransitioning.value || !window) {\n        return;\n      }\n\n      // Initialize transition state here.\n      isTransitioning.value = true;\n      if (window.transitionCount.value === 0) {\n        // Set initial height for height transition.\n        window.transitionHeight.value = convertToUnit(window.rootRef.value?.clientHeight);\n      }\n      window.transitionCount.value += 1;\n    }\n    function onTransitionCancelled() {\n      onAfterTransition(); // This should have the same path as normal transition end.\n    }\n    function onEnterTransition(el) {\n      if (!isTransitioning.value) {\n        return;\n      }\n      nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!hasTransition.value || !isTransitioning.value || !window) {\n          return;\n        }\n\n        // Set transition target height.\n        window.transitionHeight.value = convertToUnit(el.clientHeight);\n      });\n    }\n    const transition = computed(() => {\n      const name = window.isReversed.value ? props.reverseTransition : props.transition;\n      return !hasTransition.value ? false : {\n        name: typeof name !== 'string' ? window.transition.value : name,\n        onBeforeEnter: onBeforeTransition,\n        onAfterEnter: onAfterTransition,\n        onEnterCancelled: onTransitionCancelled,\n        onBeforeLeave: onBeforeTransition,\n        onAfterLeave: onAfterTransition,\n        onLeaveCancelled: onTransitionCancelled,\n        onEnter: onEnterTransition\n      };\n    });\n    const {\n      hasContent\n    } = useLazy(props, groupItem.isSelected);\n    useRender(() => _createVNode(MaybeTransition, {\n      \"transition\": transition.value,\n      \"disabled\": !isBooted.value\n    }, {\n      default: () => [_withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-window-item', groupItem.selectedClass.value, props.class],\n        \"style\": props.style\n      }, [hasContent.value && slots.default?.()]), [[_vShow, groupItem.isSelected.value]])]\n    }));\n    return {\n      groupItem\n    };\n  }\n});\n//# sourceMappingURL=VWindowItem.mjs.map",
      "start": 1723204990404,
      "end": 1723204990457,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1723204990457,
      "end": 1723204990457,
      "order": "normal"
    }
  ]
}
